{"version":3,"sources":["components/Navbar.js","types/types.js","actions/generos.js","actions/ui.js","hooks/useForm.js","components/genero/FormAgregarGenero.js","components/genero/GeneroCard.js","pages/GeneroPage.js","pages/HomePage.js","actions/libros.js","actions/personas.js","components/genero/BuscarPorGenero.js","components/libro/FormAgregarLibros.js","components/libro/FormActualizarLibro.js","components/Modal.js","components/libro/PrestarDevolverLibro.js","components/libro/LibroCard.js","components/libro/SearchLibros.js","pages/LibroPage.js","components/persona/FormAgregarPersona.js","components/persona/FormActualizarPersona.js","components/persona/LibrosPrestados.js","components/persona/ModalLibroPersonas.js","components/persona/PersonaCard.js","pages/PersonaPage.js","router/AppRouter.js","reducers/generoReducer.js","reducers/libroReducer.js","reducers/personaReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","BooksApp.js","index.js"],"names":["Navbar","className","to","types","baseUrl","process","startCargarGeneros","dispatch","a","axios","get","status","data","cargarGeneros","categorias","console","log","mensaje","generos","type","payload","borrarGenero","id","crearGenero","genero","abrirModal","cerrarModal","terminarBusqueda","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","nombre","FormAgregarGenero","useDispatch","formValues","onSubmit","e","preventDefault","post","categoria","startCrearGenero","htmlFor","onChange","placeholder","autoComplete","required","GeneroCard","_id","onClick","delete","startBorrarGenero","GeneroPage","useSelector","state","useEffect","map","HomePage","startCargarLibros","cargarLibros","libros","borrarLibro","devolverLibro","prestarLibro","persona_id","crearLibro","libro","actualizarLibro","filtrarLibros","startCargarPersonas","cargarPersonas","personas","borrarPersona","crearPersona","persona","actualizarPersona","BuscarPorGenero","setGenero","generoChange","event","buscarLibros","librosPorGenero","filter","categoria_id","hidden","onSelect","descripcion","FormAgregarLibros","startCrearLibro","FormActualizarLibro","put","startActualizarLibro","Modal","Component","component","rest","PrestarDevolverLibro","uid","setPersona","personaChange","body","LibroCard","ui","modalOpen","setLibro","libroEncontrado","find","lib","personaEncontrada","p","startBorrarLibro","SearchLibros","searchText","length","libroBuscado","toUpperCase","librosEncontrados","includes","LibroPage","filtered","librosFiltrados","colSpan","FormAgregarPersona","surname","userTag","email","apellido","alias","startCrearpersona","pattern","FormActualizarPersona","startActualizarpersona","LibrosPrestados","librosPersona","setlibrosPersona","active","setActive","nuevosLibros","ModalLibrosPersona","PersonaCard","modalOpenBorrowed","startBorrarPersona","abrirModalLibrosPrestados","PersonaPage","AppRouter","exact","path","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BooksApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e1a859.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../styles/components/Navbar.css\";\n\nexport const Navbar = () => {\n    return (\n        <>\n            <div className=\"navbar-position\">\n                <Link className=\"titulo-nav\" to='/persona'>  personas  </Link>\n                <Link className=\"titulo-nav\" to='/libro'>  libros  </Link>\n                <Link className=\"titulo-nav\" to='/genero'>  generos  </Link>\n                {/* <Link className=\"titulo-nav home\" to='/'> Home </Link> */}\n            </div>\n            <div className=\"navbar-responsive\"></div>\n        </>\n    )\n}\n","export const types = {\n\n    //Libros\n    libroLoad: \"[libro] Cargar Libros\",\n    libroNew: \"[libro] Agregar Libro\",\n    libroLend: \"[libro] Prestar Libro\",\n    libroReturn: \"[libro] Devolver Libro\",\n    libroDelete: \"[libro] Borrar Libro\",\n    libroUpdate: \"[libro] Actualizar Libro\",\n    libroFilter: \"[libro] Filtrar libros\",\n\n    //Generos\n    generoLoad: \"[genero] Cargar Generos\",\n    generoNew: \"[genero] Agregar Genero\",\n    generoDelete: \"[genero] Borrar Genero\",\n\n    //Personas\n    personaLoad: \"[persona] Cargar personas\",\n    personaNew: \"[persona] Agregar persona\",\n    personaDelete: \"[persona] Borrar persona\",\n    personaUpdate: \"[persona] Actualizar persona\",\n    personaSearchLibros: \"[persona] Buscar libros por persona\",\n\n    //Ui\n    modalOpen: \"[ui] Montar modal\",\n    modalOpenBorrowed: \"[ui] Montar modal libros prestados\",\n    modalClose: \"[ui] Desmontar modal\",\n    searchFinish: \"[ui] Terminar busqueda\"\n};","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarGeneros = () => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.get(`${baseUrl}/categoria`);\n\n        if (status === 200) {\n            dispatch(cargarGeneros(data.categorias));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst cargarGeneros = (generos) => ({\n    type: types.generoLoad,\n    payload: generos,\n});\n\nexport const startBorrarGenero = (id) => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.delete(`${baseUrl}/categoria/${id}`);\n\n        if (status === 200) {\n            dispatch(borrarGenero(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst borrarGenero = (id) => ({\n    type: types.generoDelete,\n    payload: id,\n});\n\nexport const startCrearGenero = (nombre) => {\n\n    return async (dispatch) => {\n\n        const genero = {\n            nombre,\n        };\n\n        const { status, data } = await axios.post(`${baseUrl}/categoria`, genero);\n\n        if (status === 200) {\n            dispatch(crearGenero(data.categoria));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nconst crearGenero = (genero) => ({\n    type: types.generoNew,\n    payload: genero,\n});","import { types } from \"../types/types\";\n\nexport const abrirModal = (id) => ({\n    type: types.modalOpen,\n    payload: {\n        id\n    }\n});\n\nexport const abrirModalLibrosPrestados = (id) => ({\n    type: types.modalOpenBorrowed,\n    payload: {\n        id\n    }\n});\n\nexport const cerrarModal = () => ({\n    type: types.modalClose\n});\n\nexport const terminarBusqueda = () => ({\n    type: types.searchFinish\n})","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startCrearGenero } from '../../actions/generos';\nimport { cerrarModal } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\nimport \"../../pages/css/generoPageStyle.css\";\n\nconst initialState = {\n    nombre: \"\",\n};\n\nexport const FormAgregarGenero = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm(initialState);\n\n    const { nombre } = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Abriendo modal\");\n        dispatch(startCrearGenero(nombre));\n        reset();\n        dispatch(cerrarModal());\n    };\n\n\n    return (\n        <div className=\"formGenero\">\n\n            <form onSubmit={handleSubmit}>\n\n                <label htmlFor=\"nombre\" >Agregar un nuevo género<span>*</span></label>\n                <table>\n                    <thead>\n                        <tr>\n                            <td><input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={nombre} placeholder=\"Ingresar un nuevo genero\" autoComplete=\"off\" required></input></td>\n                            <td><button type=\"submit\"> <ion-icon name=\"add-circle\"></ion-icon> </button></td>\n                        </tr>\n                    </thead>\n                </table>\n                <p className=\"aviso\"><span> * </span>Campos obligatorios.</p>\n\n            </form>\n\n        </div>\n    )\n}\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startBorrarGenero } from '../../actions/generos';\nimport \"../../pages/css/generoPageStyle.css\";\n\nexport const GeneroCard = ({ nombre, _id: id }) => {\n\n    const dispatch = useDispatch();\n\n    const onBorrar = () => {\n        dispatch(startBorrarGenero(id));\n    };\n\n    return (\n        <div className=\"cardGenero\">\n            <table>\n                <thead>\n                    <tr>\n                        <td>\n                            <label htmlFor=\"nombre\" >{nombre}</label>\n                        </td>\n                        <td>\n                            <button onClick={onBorrar}>\n                                <ion-icon name=\"trash\"></ion-icon>\n                            </button>\n                        </td>\n                    </tr>\n                </thead>\n            </table>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCargarGeneros } from '../actions/generos';\nimport { FormAgregarGenero } from '../components/genero/FormAgregarGenero';\nimport { GeneroCard } from '../components/genero/GeneroCard';\nimport \"./css/generoPageStyle.css\"\n\n\nexport const GeneroPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { generos } = useSelector(state => state.genero);\n\n    useEffect(() => {\n        dispatch(startCargarGeneros());\n    }, [dispatch]);\n\n    return (\n\n        <div className=\"estiloGenero\">\n\n            <h1>Página de Géneros</h1>\n\n            <FormAgregarGenero />\n\n            <h2>Lista de géneros existentes</h2>\n            {\n                generos?.map(genero => (\n                    <GeneroCard\n                        key={genero._id}\n                        {...genero}\n                    />\n                ))\n            }\n\n\n        </div>\n\n\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nexport const HomePage = () => {\n    return (\n        <div>\n            <Redirect to=\"/libro\" />\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarLibros = () => {\n\n    return async (dispatch) => {\n\n        const { status, data } = await axios.get(`${baseUrl}/libro`);\n\n        if (status === 200) {\n            dispatch(cargarLibros(data.libros))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nexport const cargarLibros = (libros) => ({\n    type: types.libroLoad,\n    payload: libros,\n})\n\nexport const startBorrarLibro = (id) => {\n    return async (dispatch) => {\n\n        const { status, data } = await axios.delete(`${baseUrl}/libro/${id}`);\n\n        if (status === 200) {\n            dispatch(borrarLibro(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n\n}\n\nexport const borrarLibro = (id) => ({\n    type: types.libroDelete,\n    payload: id,\n})\n\n\nexport const startDevolverLibro = (id) => {\n    return async (dispatch) => {\n\n        const state = {\n            id\n        }\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/devolver/${id}`, state);\n\n        if (status === 200) {\n            dispatch(devolverLibro(id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n}\n\nexport const devolverLibro = (id) => ({\n    type: types.libroReturn,\n    payload: id,\n})\n\n\nexport const startPrestarLibro = (id, persona_id) => {\n    return async (dispatch) => {\n\n        const body = {\n            persona_id\n        }\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/prestar/${id}`, body);\n\n        if (status === 200) {\n            dispatch(prestarLibro(id, persona_id));\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n}\n\nexport const prestarLibro = (id, persona_id) => ({\n    type: types.libroLend,\n    payload: {\n        id,\n        persona_id\n    },\n});\n\nexport const startCrearLibro = (nombre, descripcion, categoria_id) => {\n\n    return async (dispatch) => {\n\n        const libro = {\n            nombre,\n            descripcion,\n            categoria_id,\n        };\n\n        const { status, data } = await axios.post(`${baseUrl}/libro`, libro);\n\n        if (status === 200) {\n            dispatch(crearLibro(data.libro))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\n\nexport const crearLibro = (libro) => ({\n    type: types.libroNew,\n    payload: libro\n});\n\nexport const startActualizarLibro = (id, nombre, descripcion) => {\n    return async (dispatch) => {\n\n        const libro = {\n            nombre,\n            descripcion,\n        };\n\n        const { status, data } = await axios.put(`${baseUrl}/libro/${id}`, libro);\n\n        if (status === 200) {\n            dispatch(actualizarLibro(id, data.libro))\n        } else {\n            console.log(`Error: ${data.mensaje} Status: ${status}`);\n        }\n    }\n};\n\nexport const actualizarLibro = (id, libro) => ({\n    type: types.libroUpdate,\n    payload: {\n        id,\n        libro,\n    }\n})\n\nexport const filtrarLibros = (libros) => ({\n    type: types.libroFilter,\n    payload: libros\n});\n\n\n","import { types } from \"../types/types\"\nimport axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const startCargarPersonas = () => {\n\n    return async (dispatch) => {\n\n        try {\n            const { data } = await axios.get(`${baseUrl}/persona`);\n            dispatch(cargarPersonas(data.personas))\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n}\n\nconst cargarPersonas = (personas) => ({\n    type: types.personaLoad,\n    payload: personas,\n})\n\nexport const startBorrarPersona = (id) => {\n    return async (dispatch) => {\n\n        try {\n            await axios.delete(`${baseUrl}/persona/${id}`);\n            dispatch(borrarPersona(id));\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst borrarPersona = (id) => ({\n    type: types.personaDelete,\n    payload: id,\n})\n\nexport const startCrearpersona = (nombre, apellido, alias, email,) => {\n\n    return async (dispatch) => {\n\n        const persona = {\n            nombre,\n            apellido,\n            alias,\n            email,\n        };\n\n        try {\n            const { data } = await axios.post(`${baseUrl}/persona`, persona);\n            dispatch(crearPersona(data.persona))\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\n\nconst crearPersona = (persona) => ({\n    type: types.personaNew,\n    payload: persona\n});\n\n\nexport const startActualizarpersona = (id, nombre, apellido, alias) => {\n    return async (dispatch) => {\n\n        const persona = {\n            nombre,\n            apellido,\n            alias\n        };\n\n        try {\n            const { data } = await axios.put(`${baseUrl}/persona/${id}`, persona);\n            dispatch(actualizarPersona(id, data.persona))\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst actualizarPersona = (id, persona) => ({\n    type: types.personaUpdate,\n    payload: {\n        id,\n        persona,\n    }\n})\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtrarLibros } from '../../actions/libros';\nimport { terminarBusqueda } from '../../actions/ui';\n\nexport const BuscarPorGenero = () => {\n\n    const [genero, setGenero] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const { generos } = useSelector(state => state.genero);\n\n    const { libros } = useSelector(state => state.libro);\n\n    const generoChange = (event) => {\n        setGenero(event.target.value);\n    };\n\n    const buscarLibros = () => {\n        const librosPorGenero = (libros.filter(libro => libro.categoria_id === genero));\n        dispatch(filtrarLibros(librosPorGenero));\n        dispatch(terminarBusqueda());\n    };\n\n    return (\n        <div className=\"search-genero\">\n            {/* <h2>Buscar libros por genero: </h2> */}\n\n            <select className=\"generoSelect\" value={genero} onChange={generoChange}>\n                <option hidden> Seleccione un genero </option>\n                {\n                    generos.map(genero => (\n                        <option\n                            value={genero._id}\n                            key={genero._id}\n                            onSelect={generoChange}\n                        >\n                            {genero.nombre}\n                        </option>\n                    ))\n                }\n            </select>\n\n            <button\n                className=\"buscar-boton\"\n                onClick={buscarLibros}>\n                Buscar\n            </button>\n            <button\n                id=\"buscar-lupa\"\n                onClick={buscarLibros}\n            >\n                <ion-icon name=\"search\"></ion-icon>\n            </button>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCrearLibro } from '../../actions/libros';\nimport { cerrarModal } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nimport \"../../styles/components/form.css\";\n\nconst initialState = {\n    nombre: \"\",\n    descripcion: \"\",\n    categoria: \"\",\n    persona: \"\"\n\n};\n\nexport const FormAgregarLibros = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm(initialState);\n\n    const { nombre, descripcion } = formValues;\n\n    const { generos } = useSelector(state => state.genero);\n\n    const [genero, setGenero] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startCrearLibro(nombre, descripcion, genero))\n        reset();\n        dispatch(cerrarModal());\n    };\n\n    const generoChange = (event) => {\n        setGenero(event.target.value);\n    };\n\n    return (\n        <form id=\"form\" onSubmit={handleSubmit}>\n\n            <h2>Agregar libro</h2>\n            <p>Ingresar datos de un libro</p>\n\n            <div id=\"form-label\">\n                <label>Nombre</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={nombre} placeholder=\"Ingresar nombre\" autoComplete=\"off\" required></input>\n            <div id=\"form-label\">\n                <label>Descripcion</label>\n            </div>\n            <input type=\"text\" name=\"descripcion\" onChange={handleInputChange} value={descripcion} placeholder=\"Ingresar descripcion\" autoComplete=\"off\"></input>\n\n            <div id=\"form-label\">\n                <label>Genero</label>\n                <span> *</span>\n            </div>\n            <select value={genero} onChange={generoChange} required>\n                <option hidden value=\"\"> Seleccione un genero </option>\n                {\n                    generos.map(genero => (\n                        <option\n                            value={genero._id}\n                            key={genero._id}\n                        >\n                            {genero.nombre}\n                        </option>\n                    ))\n                }\n            </select>\n\n            <button id=\"boton-form\">Hecho</button>\n            <div id=\"form-label\">\n                <span>* </span>\n                <label>Los campos son obligatorios</label>\n            </div>\n        </form>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startActualizarLibro } from '../../actions/libros';\nimport { cerrarModal } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\nimport \"../../styles/components/form.css\"\n\nexport const FormActualizarLibro = ({ id }) => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm({\n        descripcion: \"\",\n        nombre: \"\",\n    });\n\n    const { descripcion, nombre } = formValues;\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startActualizarLibro(id, nombre, descripcion))\n        reset();\n        dispatch(cerrarModal());\n    }\n\n    return (\n        <div>\n            <form id=\"form\" onSubmit={onSubmit}>\n                <h2>Actualizar libro</h2>\n                <p>Ingresar datos a actualizar</p>\n                <div id=\"form-label\">\n                    <label>Nombre</label>\n                    <span> *</span>\n                </div>\n                <input type=\"text\" name=\"nombre\" onChange={handleInputChange} value={nombre} placeholder=\"Ingresar nombre\" autoComplete=\"off\" required></input>\n                <label id=\"form-label\">Descripcion</label>\n                <input type=\"text\" name=\"descripcion\" onChange={handleInputChange} value={descripcion} placeholder=\"Ingresar descripcion\" autoComplete=\"off\"></input>\n                <button id=\"boton-form\">Hecho</button>\n                <div id=\"form-label\">\n                    <span>* </span>\n                    <label>Los campos son obligatorios</label>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux';\nimport { cerrarModal } from '../actions/ui';\nimport \"../styles/components/Modal.css\"\n\nexport const Modal = ({\n    component: Component,\n    ...rest\n}) => {\n\n    const dispatch = useDispatch();\n\n    const onModal = () => {\n        dispatch(cerrarModal());\n    }\n\n    return (\n\n        <div>\n            <div id=\"modal\">\n                <div id=\"modal-contenido\">\n                    <div id=\"modal-close\">\n                        <button onClick={onModal}><ion-icon name=\"close-circle-outline\"></ion-icon></button>\n                    </div>\n                    <Component {...rest} />\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nModal.propTypes = {\n    component: PropTypes.func.isRequired,\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startDevolverLibro, startPrestarLibro } from '../../actions/libros';\n\nexport const PrestarDevolverLibro = ({ uid }) => {\n\n    const { personas } = useSelector(state => state.persona);\n\n    const dispatch = useDispatch();\n\n    const [persona, setPersona] = useState(\"\");\n\n    const onPrestamo = () => {\n        dispatch(startPrestarLibro(uid, persona));\n    };\n\n    const personaChange = (event) => {\n        setPersona(event.target.value);\n    };\n\n    const onDevolver = () => {\n        dispatch(startDevolverLibro(uid));\n    };\n\n    return (\n        <>\n            <td className=\"prestarLibro\">\n\n                <select value={persona} onChange={personaChange}>\n                    <option hidden>Prestar</option>\n                    {\n                        personas.map(persona => (\n                            <option\n                                value={persona._id}\n                                key={persona._id}\n                                onSelect={personaChange}\n                            >\n                                {persona.nombre}\n                            </option>\n                        ))\n                    }\n                </select>\n                <button className=\"bottonLibro\" id=\"boton-prestar\" onClick={onPrestamo}>\n                    confirmar\n                </button>\n            </td>\n            <td>\n\n                <button\n                    onClick={onDevolver}\n                    className=\"bottonLibro\"\n                >\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Devolver</span>\n                    </span>\n                    <ion-icon name=\"arrow-undo\"></ion-icon>\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Devolver</span>\n                    </span>\n                </button>\n\n            </td>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startBorrarLibro } from '../../actions/libros';\nimport { FormActualizarLibro } from './FormActualizarLibro';\nimport { abrirModal } from '../../actions/ui';\nimport { Modal } from '../Modal';\nimport { PrestarDevolverLibro } from './PrestarDevolverLibro';\n\nexport const LibroCard = ({ id: uid }) => {\n\n    const dispatch = useDispatch();\n\n    const { personas } = useSelector(state => state.persona);\n    const { libros } = useSelector(state => state.libro);\n    const { modalOpen, id } = useSelector(state => state.ui);\n\n    const [libro, setLibro] = useState({});\n\n    const { nombre, descripcion, persona_id } = libro;\n\n    const [persona, setPersona] = useState({});\n\n    const onBorrar = () => {\n        dispatch(startBorrarLibro(uid))\n    };\n\n    useEffect(() => {\n\n        const libroEncontrado = libros.find(lib => lib._id === uid);\n        setLibro(libroEncontrado);\n\n    }, [uid, libros])\n\n    useEffect(() => {\n\n        const personaEncontrada = personas.find(p => p._id === persona_id);\n        setPersona(personaEncontrada);\n\n    }, [persona_id, personas])\n\n    const onModal = () => {\n        dispatch(abrirModal(uid));\n    }\n\n    return (\n        <tr className=\"libro-card\">\n            <td><p>{nombre}</p></td>\n            <td><p>{descripcion}</p></td>\n            <td>\n                <p>\n                    {\n                        persona ? `${persona.nombre}` : `No está prestado`\n                    }\n                </p>\n            </td>\n\n            <PrestarDevolverLibro uid={uid} />\n            <td>\n                <button\n                    className=\"bottonLibro\"\n                    onClick={onBorrar}\n                >\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Borrar</span>\n                    </span>\n                    <ion-icon name=\"trash\"></ion-icon>\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Borrar</span>\n                    </span>\n\n                </button>\n            </td>\n            <td>\n\n                <button className=\"bottonLibro\" onClick={onModal}>\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Refrescar</span>\n                    </span>\n                    <ion-icon name=\"refresh-circle\"></ion-icon>\n                    <span className=\"tooltip\">-\n                        <span className=\"tooltiptext\">Refrescar</span>\n                    </span>\n                </button>\n                {\n                    (modalOpen && uid === id) && (\n                        <Modal component={FormActualizarLibro} id={uid} />\n                    )\n\n                }\n            </td>\n\n        </tr>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { filtrarLibros } from '../../actions/libros';\nimport { terminarBusqueda } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const SearchLibros = () => {\n\n    const [formValues, handleInputChange] = useForm({\n        searchText: \"\"\n    });\n\n    const dispatch = useDispatch();\n\n    const { libros } = useSelector(state => state.libro);\n\n\n    const { searchText } = formValues;\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n\n        if (searchText.length > 0) {\n            const libroBuscado = searchText.toUpperCase();\n\n            const librosEncontrados = libros.filter(libro => libro.nombre.includes(libroBuscado));\n            dispatch(filtrarLibros(librosEncontrados));\n            dispatch(terminarBusqueda());\n        }\n        // else {\n\n        //     const librosEncontrados = libros;\n        //     dispatch(filtrarLibros(librosEncontrados));\n        //     dispatch(terminarBusqueda());\n        // }\n    }\n\n    return (\n\n        <form className=\"search-libro\" onSubmit={handleSearch}>\n            <input\n                type=\"text\"\n                placeholder=\"Buscar libro por nombre\"\n                name=\"searchText\"\n                autoComplete=\"off\"\n                value={searchText}\n                onChange={handleInputChange}\n                className=\"campoBuscar\"\n\n            />\n\n            <button\n                className=\"buscar-boton\"\n                type=\"submit\"\n            >\n                Buscar...\n            </button>\n            <button\n                type=\"submit\"\n                id=\"buscar-lupa\"\n            >\n                <ion-icon name=\"search\"></ion-icon>\n            </button>\n        </form>\n\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCargarGeneros } from '../actions/generos';\nimport { startCargarLibros } from '../actions/libros';\nimport { startCargarPersonas } from '../actions/personas';\nimport { abrirModal } from '../actions/ui';\nimport { BuscarPorGenero } from '../components/genero/BuscarPorGenero';\nimport { FormAgregarLibros } from '../components/libro/FormAgregarLibros';\nimport { LibroCard } from '../components/libro/LibroCard';\nimport { SearchLibros } from '../components/libro/SearchLibros';\nimport { Modal } from '../components/Modal';\nimport './css/libroPageStyle.css'\n\nexport const LibroPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalOpen, id } = useSelector(state => state.ui)\n\n    const { filtered } = useSelector(state => state.ui)\n    const { librosFiltrados } = useSelector(state => state.libro);\n    const { libros } = useSelector(state => state.libro);\n\n    useEffect(() => {\n        dispatch(startCargarLibros());\n        dispatch(startCargarPersonas());\n        dispatch(startCargarGeneros());\n    }, [dispatch]);\n\n    const onModal = () => {\n        dispatch(abrirModal());\n    };\n\n    return (\n\n        <div className=\"estiloLibro\">\n            {\n                (modalOpen && !id) && (\n                    <Modal component={FormAgregarLibros} modalOpen={modalOpen} />\n                )\n            }\n            <div className=\"buscadores\">\n                <div className=\"agregar-libro\" >\n                    <button onClick={onModal}><ion-icon name=\"add-circle\"></ion-icon></button>\n                    <p>Agregar</p>\n                </div>\n                <SearchLibros />\n                <BuscarPorGenero />\n            </div>\n            <table>\n                <tbody>\n\n                    <tr>\n                        <th>Nombre</th>\n                        <th>Descripcion</th>\n                        <th>Prestado A</th>\n                        <th colSpan=\"4\">Acciones</th>\n                    </tr>\n                    {\n                        (!filtered) &&\n                        libros?.map(libro => (\n                            <LibroCard\n                                key={libro._id}\n                                id={libro._id}\n                            />\n                        ))\n                    }\n                    {\n                        (!filtered) &&\n                        (libros.length === 0) && (\n                            <span>Cargando</span>\n                        )\n                    }\n\n                    {\n                        (filtered) &&\n                        librosFiltrados?.map(libro => (\n                            <LibroCard\n                                key={libro._id}\n                                id={libro._id}\n                            />\n                        ))\n                    }\n                    {\n                        (filtered) &&\n                        (librosFiltrados.length === 0) && (\n                            <span>No se encuentra busqueda</span>\n                        )\n                    }\n                </tbody>\n\n            </table>\n\n\n        </div >\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startCrearpersona } from '../../actions/personas';\nimport { cerrarModal } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\nimport '../../pages/css/personaPageStyle.css';\n\nexport const FormAgregarPersona = () => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm({\n        name: \"\",\n        surname: \"\",\n        userTag: \"\",\n        email: \"\",\n    });\n\n    const { name, surname, userTag, email } = formValues;\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startCrearpersona(name, surname, userTag, email));\n        reset();\n        dispatch(cerrarModal());\n    }\n\n    return (\n\n        <form id=\"form\" onSubmit={onSubmit}>\n            <h2>Agregar persona</h2>\n            <p>Ingresar datos de una persona</p>\n            <div id=\"form-label\">\n                <label>Nombre</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"name\" onChange={handleInputChange} value={name} placeholder=\"Ingresar nombre\" autoComplete=\"off\" required pattern=\"[A-Za-z]{1,15}\"></input>\n            <div id=\"form-label\">\n                <label>Apellido</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"surname\" onChange={handleInputChange} value={surname} placeholder=\"Ingresar apellido\" autoComplete=\"off\" required pattern=\"[A-Za-z]{1,15}\"></input>\n            <div id=\"form-label\">\n                <label>Alias</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"userTag\" onChange={handleInputChange} value={userTag} placeholder=\"Ingresar alias\" autoComplete=\"off\" required pattern=\"[A-Za-z0-9_-]{1,15}\"></input>\n            <div id=\"form-label\">\n                <label>Email</label>\n                <span> *</span>\n            </div>\n            <input type=\"email\" name=\"email\" onChange={handleInputChange} value={email} placeholder=\"Ingresar email\" autoComplete=\"off\" required></input>\n            <button id=\"boton-form\">Hecho</button>\n            <div id=\"form-label\">\n                <span>* </span>\n                <label>Los campos son obligatorios</label>\n            </div>\n        </form>\n\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { startActualizarpersona } from '../../actions/personas';\nimport { cerrarModal } from '../../actions/ui';\nimport { useForm } from '../../hooks/useForm';\n\n\nexport const FormActualizarPersona = ({ id }) => {\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange, reset] = useForm({\n        name: \"\",\n        surname: \"\",\n        userTag: \"\",\n    });\n\n    const { name, surname, userTag } = formValues;\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        dispatch(startActualizarpersona(id, name, surname, userTag));\n        reset();\n        dispatch(cerrarModal());\n    }\n\n    return (\n        <form id=\"form\" onSubmit={onSubmit}>\n            <h2>Actualizar persona</h2>\n            <p>Ingresar datos a actualizar</p>\n            <div id=\"form-label\">\n                <label>Nombre</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"name\" onChange={handleInputChange} value={name} placeholder=\"Ingresar nombre\" autoComplete=\"off\" required></input>\n            <div id=\"form-label\">\n                <label>Apellido</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"surname\" onChange={handleInputChange} value={surname} placeholder=\"Ingresar apellido\" autoComplete=\"off\" required></input>\n            <div id=\"form-label\">\n                <label>Alias</label>\n                <span> *</span>\n            </div>\n            <input type=\"text\" name=\"userTag\" onChange={handleInputChange} value={userTag} placeholder=\"Ingresar alias\" autoComplete=\"off\" required></input>\n            <button id=\"boton-form\">Hecho</button>\n            <div id=\"form-label\">\n                <span>* </span>\n                <label>Los campos son obligatorios</label>\n            </div>\n        </form>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LibroCard } from '../libro/LibroCard';\n\nexport const LibrosPrestados = ({ id }) => {\n\n    const { libros } = useSelector(state => state.libro);\n\n    const [librosPersona, setlibrosPersona] = useState([]);\n\n    const dispatch = useDispatch();\n\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        const nuevosLibros = libros.filter(libro => libro.persona_id === id);\n        setlibrosPersona(nuevosLibros)\n\n        if (librosPersona.length === 0) {\n            setActive(false);\n        } else {\n            setActive(true);\n        }\n\n    }, [dispatch, id, libros, librosPersona.length])\n\n    return (\n        <div className=\"estiloLibro libro-page\">\n\n            {\n                (active)\n                    ? (\n                        librosPersona?.map(libro => (\n                            <>\n                                <h2>Libros prestados</h2>\n                                <br></br>\n\n                                <tbody>\n\n                                    <tr>\n                                        <th>Nombre</th>\n                                        <th>Descripcion</th>\n                                        <th>Prestado A</th>\n                                        <th colSpan=\"4\">Acciones</th>\n                                    </tr>\n\n                                </tbody>\n\n                                <LibroCard\n                                    key={libro._id}\n                                    id={libro._id}\n                                />\n                            </>\n                        ))\n\n                    )\n                    :\n                    (\n                        <h2>No hay libros prestados a esta persona</h2>\n                    )\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux';\nimport { cerrarModal } from '../../actions/ui';\nimport \"../../styles/components/ModalLibrosPersona.css\";\n\nexport const ModalLibrosPersona = ({\n    component: Component,\n    ...rest\n}) => {\n\n    const dispatch = useDispatch();\n\n    const onModal = () => {\n        dispatch(cerrarModal());\n    }\n\n    return (\n\n        <div>\n            <div id=\"modal-libros\">\n                <div className=\"modal-libros-contenido\">\n                    <div className=\"modal-libros-close\">\n                        <button onClick={onModal}><ion-icon name=\"close-circle-outline\"></ion-icon></button>\n                    </div>\n                    <Component {...rest} />\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nModalLibrosPersona.propTypes = {\n    component: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startBorrarPersona } from '../../actions/personas';\nimport { abrirModal, abrirModalLibrosPrestados } from '../../actions/ui';\nimport { Modal } from '../Modal';\nimport { FormActualizarPersona } from './FormActualizarPersona';\nimport { LibrosPrestados } from './LibrosPrestados';\nimport { ModalLibrosPersona } from './ModalLibroPersonas';\nimport '../../pages/css/personaPageStyle.css';\n\nexport const PersonaCard = ({ nombre, apellido, alias, email, _id: uid }) => {\n\n    const dispatch = useDispatch();\n\n    const { modalOpen, modalOpenBorrowed, id } = useSelector(state => state.ui);\n\n    const onBorrar = () => {\n        dispatch(startBorrarPersona(uid))\n    };\n\n    const onModalActualizar = () => {\n        dispatch(abrirModal(uid));\n    }\n\n    const onModalLibros = () => {\n        dispatch(abrirModalLibrosPrestados(uid));\n    }\n\n    return (\n\n        <div className=\"estiloPersona\">\n            <div className=\"datos\">\n                <label>Nombre: </label>{nombre}\n\n                <label>Apellido: </label>{apellido}\n\n                <label>Alias: </label>{alias}\n\n                <label>Email: </label>{email}\n            </div>\n\n            <div className=\"estiloPersonaTr\">\n                <button className=\"boton-persona-card\" onClick={onBorrar}> <ion-icon name=\"trash\"></ion-icon></button>\n\n                <button className=\"boton-persona-card\" onClick={onModalActualizar}> <ion-icon name=\"reload\"></ion-icon></button>\n\n                {\n                    (modalOpen && uid === id) && (\n                        <Modal component={FormActualizarPersona} id={uid} />\n                    )\n                }\n\n                <button className=\"boton-persona-card\" onClick={onModalLibros}> <ion-icon name=\"enter\"></ion-icon></button>\n\n                {\n                    (modalOpenBorrowed && uid === id) && (\n                        <ModalLibrosPersona component={LibrosPrestados} id={uid} />\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startCargarLibros } from '../actions/libros';\nimport { startCargarPersonas } from '../actions/personas';\nimport { abrirModal } from '../actions/ui';\nimport { Modal } from '../components/Modal';\nimport { FormAgregarPersona } from '../components/persona/FormAgregarPersona';\nimport { PersonaCard } from '../components/persona/PersonaCard';\nimport './css/personaPageStyle.css';\n\nexport const PersonaPage = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalOpen, id } = useSelector(state => state.ui)\n\n    const { personas } = useSelector(state => state.persona);\n\n    useEffect(() => {\n        dispatch(startCargarPersonas());\n        dispatch(startCargarLibros())\n    }, [dispatch]);\n\n    const onModal = () => {\n        dispatch(abrirModal());\n    };\n\n    return (\n        <div className=\"estiloFormularioPersona\">\n\n\n            <h1>Página de Personas</h1>\n\n            <div className=\"agregar-personas\">\n                <button className=\"estiloBotonAgregarPersona\" onClick={onModal}> <ion-icon name=\"add-circle\"></ion-icon></button>\n                {\n                    (modalOpen && !id) && (\n                        <Modal component={FormAgregarPersona} modalOpen={modalOpen} />\n                    )\n                }\n\n                <p>Agregar nueva persona</p>\n            </div>\n\n            <h2>Lista de personas existentes</h2>\n            {\n                personas?.map(persona => (\n                    <PersonaCard\n                        key={persona._id}\n                        {...persona}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n    Route\n} from \"react-router-dom\";\n\nimport { Navbar } from '../components/Navbar';\nimport { GeneroPage } from '../pages/GeneroPage';\n\nimport { HomePage } from '../pages/HomePage';\nimport { LibroPage } from '../pages/LibroPage';\nimport { PersonaPage } from '../pages/PersonaPage';\n\nexport const AppRouter = () => {\n\n\n    return (\n\n        <Router>\n            <div className=\"navbar-position\">\n                <Navbar />\n            </div>\n\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n\n                <Route exact path=\"/persona\" component={PersonaPage} />\n                <Route exact path=\"/genero\" component={GeneroPage} />\n                <Route exact path=\"/libro\" component={LibroPage} />\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n\n    )\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    generos: [],\n}\n\nexport const generoReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.generoLoad:\n            return {\n                ...state,\n                generos: action.payload,\n            };\n\n        case types.generoDelete:\n            return {\n                ...state,\n                generos: state.generos.filter(genero => genero._id !== action.payload),\n            };\n\n        case types.generoNew:\n            return {\n                ...state,\n                generos: [action.payload, ...state.generos]\n            };\n\n        default:\n            return state;\n    }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    libros: [],\n    librosFiltrados: [],\n}\n\nexport const libroReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.libroLoad:\n            return {\n                ...state,\n                libros: action.payload,\n            };\n\n        case types.libroDelete:\n            return {\n                ...state,\n                libros: state.libros.filter(libro => libro._id !== action.payload),\n            };\n\n        case types.libroReturn:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload) {\n                        libro.persona_id = null;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        case types.libroLend:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload.id) {\n                        libro.persona_id = action.payload.persona_id;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        case types.libroNew:\n            return {\n                ...state,\n                libros: [action.payload, ...state.libros]\n            };\n\n        case types.libroUpdate:\n            return {\n                ...state,\n                libros: state.libros.map(libro => {\n                    if (libro._id === action.payload.id) {\n                        libro = action.payload.libro;\n                    }\n\n                    return libro;\n                }),\n            };\n\n        case types.libroFilter:\n            return {\n                ...state,\n                librosFiltrados: action.payload\n                // libros: action.payload,\n            };\n\n        default:\n            return state;\n    };\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    personas: [],\n};\n\nexport const personaReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.personaLoad:\n            return {\n                ...state,\n                personas: action.payload,\n            };\n\n        case types.personaDelete:\n            return {\n                ...state,\n                personas: state.personas.filter(persona => persona._id !== action.payload),\n            };\n\n        case types.personaNew:\n            return {\n                ...state,\n                personas: [action.payload, ...state.personas]\n            };\n\n        case types.personaUpdate:\n            return {\n                ...state,\n                personas: state.personas.map(persona => {\n                    if (persona._id === action.payload.id) {\n                        persona = action.payload.persona;\n                    }\n\n                    return persona;\n                }),\n            };\n\n        default:\n            return state;\n    };\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n    modalOpenBorrowed: false,\n    id: \"\",\n    filtered: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case types.modalOpen:\n\n            if (action.payload) {\n                return {\n                    modalOpen: true,\n                    id: action.payload.id\n                }\n            }\n\n            return {\n                modalOpen: true,\n            };\n\n        case types.modalOpenBorrowed:\n\n            if (action.payload) {\n                return {\n                    modalOpenBorrowed: true,\n                    id: action.payload.id\n                }\n            }\n\n            return {\n                modalOpenBorrowed: true,\n            };\n\n        case types.modalClose:\n            return {\n                modalOpen: false,\n                modalOpenBorrowed: false,\n            };\n\n        case types.searchFinish:\n            return {\n                filtered: true,\n            };\n\n        default:\n            return state;\n    };\n};","import { combineReducers } from 'redux'\nimport { generoReducer } from './generoReducer';\nimport { libroReducer } from './libroReducer';\nimport { personaReducer } from './personaReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n    libro: libroReducer,\n    persona: personaReducer,\n    genero: generoReducer,\n    ui: uiReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const BooksApp = () => {\n    return (\n        <div>\n            <Provider store={store}>\n                <AppRouter />\n            </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BooksApp } from './BooksApp';\nimport './index.css';\n\nReactDOM.render(\n  <BooksApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}